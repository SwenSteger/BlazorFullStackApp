@page "/hero"
@page "/hero/{id:int}"
@inject ISuperHeroService SuperHeroService

@if (Id == null)
{
	<PageTitle>Create a new Super Hero</PageTitle>
	<h3>Create a new Super Hero</h3>
}
else
{
	<PageTitle>Edit @_hero.HeroName</PageTitle>
	<h3>Edit @_hero.HeroName</h3>	
}

<EditForm Model="_hero" OnSubmit="HandleSubmit">
	<div>
		<label for="firstname">First Name</label>
		<InputText id="firstname" @bind-Value="_hero.FirstName" class="form-control"></InputText>
	</div>
	<div>
		<label for="lastname">Last Name</label>
		<InputText id="lastname" @bind-Value="_hero.LastName" class="form-control"></InputText>
	</div>
	<div>
		<label for="heroname">Hero Name</label>
		<InputText id="heroname" @bind-Value="_hero.HeroName" class="form-control"></InputText>
	</div>
	<div>
		<label>Comic</label><br />
		<InputSelect @bind-Value="_hero.ComicId" class="form-select">
			@foreach (var comic in SuperHeroService.Comics)
			{
				<option value="@comic.Id">@comic.Name</option>
			}
		</InputSelect>
	</div>
	<br />
	<button type="submit" class="btn btn-primary">@_buttonText</button>
	<button type="button" class="btn btn-danger" @onclick="DeleteHero">Delete Hero</button>
</EditForm>

@code {
	[Parameter]
	public int? Id { get; set; }

	private string _buttonText = string.Empty;
	private SuperHero _hero = new() { Comic = new Comic() };

	protected override async Task OnInitializedAsync()
	{
		_buttonText = Id == null ? "Save New Hero" : "Update Hero";
		await SuperHeroService.GetComics();
	}

	protected override async Task OnParametersSetAsync()
	{
		if (Id == null)
		{
			// Create a new hero
			_hero.Comic = SuperHeroService.Comics[0];
			_hero.ComicId = _hero.Comic.Id;
		}
		else
		{
			_hero = await SuperHeroService.GetSuperHero((int)Id);
		}
	}

	private async Task HandleSubmit()
	{
		if (Id == null)
		{
			await SuperHeroService.CreateHero(_hero);
		}
		else
		{
			await SuperHeroService.UpdateHero(_hero);
		}
	}

	private async Task DeleteHero()
	{
		await SuperHeroService.DeleteHero(_hero.Id);
	}
}